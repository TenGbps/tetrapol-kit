datar = (
    '011111111111111100000011000000000001000110010000000000110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100110111111010100000100110',
    '011111111111111100000011000000000001000110010000000100110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100110111110010000010000111',
    '011111111111111100000011000000000001000110010000000000110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000001101110011101111',
    '011111111111111100000011000000000001000110010000000100110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000000101010001001110',
    '011111111111111100000011000000000001000110010000000000110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000010101010111111110',
    '011111111111111100000011000000000001000110010000000100110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000011101110101011111',
    '011111111111111100000011000000000001000110010000000000110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000101100111011001100',
    '011111111111111100000011000000000001000110010000000100110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000100100011001101101',
    '011111111111111100000011000000000001000110010000000000110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000110100011111011101',
    '011111111111111100000011000000000001000110010000000100110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111000111100111101111100',
    '011111111111111100000011000000000001000110010000000000110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111001001111100010101001',
    '011111111111111100000011000000000001000110010000000100110110000000000010000101100000000000001010000000000000000100000001010001110000000010000011111101010000000000000100111001000111000000001000'
    )

pol_int = 0b10001000000100001
pol = ( 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1 )

def str2bin(s):
    return [ord(d) - ord('0') for d in s]

def big2little(s):
    r = []
    for i in range(len(s)):
        n, l = i // 8, i % 8
        r.append(s[8*n + 7 - l])
    return r

def bin2bytes(s):
    res = []
    for i in range(len(s) // 8):
        r = 0
        for j in range(8):
            r = (r << 1) | s[i * 8 + j]
        res.append(r)
    return res

def poly_div(d, p):
    d = d[:]
    while len(d) >= len(p):
        if d[0] == 0:
            d.pop(0)
            continue
        for i in range(len(p)):
            d[i] ^= p[i]
        d.pop(0)
    return d

def xors(s1, s2):
    r = s1[:]
    for i in range(len(s2)):
        r[i] ^= s2[i]
    return r

def inv(s):
    r = []
    for c in s:
        r.append(1 - c)
    return r


def print_buf(s, end='\n'):
    for c in s:
        print(c, end='')
    print(end=end)

def print_bufs(b, end='\n'):
    for s in b:
        print_buf(s, end)

datar_bin = [str2bin(d) for d in datar]
data_bin = [big2little(d) for d in datar_bin]

data_xor = []
for i in range(len(data_bin) // 2):
    data_xor.append(xors(data_bin[2*i], data_bin[2*i + 1]))

datar_xor = []
for i in range(len(datar_bin) // 2):
    datar_xor.append(xors(datar_bin[2*i], datar_bin[2*i + 1]))

data_inc_xor = []
for i in range(len(data_bin) // 2 - 1):
    data_inc_xor.append(xors(data_bin[2*i], data_bin[2*i + 2]))

